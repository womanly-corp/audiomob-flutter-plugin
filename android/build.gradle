group = "com.wromance.audiomob"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.5.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        flatDir {
            dirs 'libs'
        }
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "maven-publish"

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "com.wromance.audiomob"
    }

    compileSdk = 35

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
        // for testig purposes enable this line and add android/libs/AudiomobSDK_v3.0.0.aar to the app/libs folder
        // main.jniLibs.srcDirs = ['libs']
    }

    defaultConfig {
        minSdk = 23
    }

    buildTypes {
        release {
            minifyEnabled false 
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false  
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dependencies {
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")

        // AudioMob SDK 
        // for testig purposes enable this line and add android/libs/AudiomobSDK_v3.0.0.aar to the app/libs folder
        // implementation files('libs/AudiomobSDK_v3.0.0.aar')
        implementation(name: 'AudiomobSDK_v3.0.0', ext: 'aar')

        // Glide
        implementation 'com.github.bumptech.glide:glide:4.15.1'
        annotationProcessor 'com.github.bumptech.glide:glide:4.15.1'

        // Play Services
        implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'
        implementation 'com.google.android.gms:play-services-auth-base:18.0.9'
        implementation 'com.google.android.gms:play-services-location:21.0.1'

        // Hilt
        implementation 'com.google.dagger:hilt-android:2.42'

        // Gson
        implementation "com.squareup.retrofit2:converter-gson:2.9.0"

        // Exoplayer
        implementation 'androidx.media3:media3-exoplayer:1.1.1'
        implementation 'androidx.media3:media3-ui:1.1.1'

        // AndroidX
        implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
        implementation 'androidx.lifecycle:lifecycle-livedata-core-ktx:2.6.1'
        implementation 'androidx.lifecycle:lifecycle-process:2.6.1'
        implementation 'androidx.navigation:navigation-ui-ktx:2.7.0'
        implementation 'androidx.core:core-ktx:1.10.1'
        implementation 'androidx.multidex:multidex:2.0.1'

        // Network
        implementation "com.squareup.retrofit2:retrofit:2.9.0"
        implementation "com.squareup.okhttp3:logging-interceptor:4.10.0"

        // something to resolve minifier errors
        implementation 'org.conscrypt:conscrypt-android:2.5.2'
        implementation 'org.bouncycastle:bcpkix-jdk15to18:1.70'
        implementation 'org.openjsse:openjsse:1.1.9'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }
}
